[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "speechnoodle"
version = "0.1.0"
description = "A flexible library for creating and processing audio datasets using customizable pipelines"
readme = "README.md"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
keywords = ["audio", "dataset", "processing", "pipeline", "speech"]
requires-python = ">=3.10"
dependencies = [
    "accelerate",
    "brouhaha @ https://github.com/marianne-m/brouhaha-vad/archive/main.zip#sha256=3e920f66726a95dd09249a056051732dce44d08e3c2005f20aa9e9b84455376d",
    "datasets>=2.16.1,<3.0.0",
    "deepgram_captions",
    "deepgram_sdk",
    "demucs",
    "g2p",
    "huggingface_hub",
    "llm-swarm",
    "matplotlib",
    "multiprocess",
    "noisereduce",
    "numpy",
    "pandas",
    "penn",
    "pyannote.audio",
    "pyannote.core",
    "pyannote.database",
    "pyannote.metrics",
    "pyannote.pipeline",
    "pyarrow",
    "pydub",
    "pyloudnorm",
    "python-dotenv",
    "setuptools",
    "soundfile",
    "torch",
    "torchaudio",
    "tqdm",
    "transformers",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pre-commit",
    "ruff",
    "black",
    "isort",
    "pytest-cov",
    "codecov",
    "mypy>=1.11.2",
    "types-requests",
    "types-tqdm",
    "memray>=1.14.0",
    "pytest-memray>=1.7.0",
    "pytest-asyncio>=0.24.0",
]
extra = [
    "phonemizer",
    "pyarrow",
    "tabulate",
    "insanely-fast-whisper==0.0.15",
]

[project.urls]
Homepage = "https://github.com/yourusername/speechnoodle"
Repository = "https://github.com/yourusername/speechnoodle.git"
Documentation = "https://github.com/yourusername/speechnoodle/tree/main/docs"
"Bug Tracker" = "https://github.com/yourusername/speechnoodle/issues"

[tool.setuptools]
packages = ["speechnoodle"]

[tool.setuptools_scm]
version_scheme = "python-simplified-semver"

[tool.ruff]
line-length = 100
include = ["speechnoodle/**/*.py", "tests/**/*.py", "setup.py"]

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B", "C", "D"]
ignore = ["D100", "D104"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.black]
line-length = 100
target-version = ['py311']
include = '(speechnoodle/.*\.py$|tests/.*\.py$|setup\.py)'

[tool.isort]
profile = "black"
line_length = 100
src_paths = ["speechnoodle", "tests"]

[tool.mypy]
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as an asyncio coroutine",
    "memray: marks tests to be run with memray profiling",
    "e2e: marks end-to-end tests",
]
